name: chocolatine

on:
    push:
        branches-ignore:
        - "ga-ignore-*"
    pull_request:
        branches-ignore:
        - "ga-ignore-*"

env:
    EXECUTABLES: "binary_choco"

jobs:
    check_coding_style:
        runs-on: ubuntu-latest
        container:
          image: ghcr.io/epitech/coding-style-checker:latest
        name: check_coding_style
        steps:
            - name: check_coding_style
              uses: actions/checkout@v4
            - run: |
                check.sh $(pwd) $(pwd)
                input="coding-style-reports.log"
                while IFS=":" read -r name line error_type error_code
                    do 
                        echo "::error title=$error_type coding style error,file=$name,line=$line::$error_code"
                    done < "$input"

    check_program_compilation:
        needs: check_coding_style
        runs-on: ubuntu-latest
        timeout-minutes: 2
        name: check_program_compilation
        container:
            image: epitechcontent/epitest-docker:latest
        steps:
            - name: check_program_compilation
              uses: actions/checkout@v4
            - run: make
            - run: make clean
            - run: |
                  for file in ${{ env.EXECUTABLES }}; do  
                    if [ ! -f "$file" ]; then
                        echo "$file does not exist"
                        exit 1
                    fi
                    if [ ! -x "$file" ]; then
                        echo "$file is not executable"
                        exit 1
                    fi
                  done

    run_tests:
        needs: check_program_compilation
        runs-on: ubuntu-latest
        name: run_tests
        timeout-minutes: 2
        container:
            image: epitechcontent/epitest-docker:latest
        steps:
             - name: unit_tests
               uses: actions/checkout@v4
             - id: run_tests
               run: |
                  make run_tests
                  if [ ! echo $0 ]; then
                      exit 1
                  fi

    
    push_to_mirror:
      needs: run_tests
      if: ${{github.workflow != vars.MIRROR_URL && github.event_name == 'push'}}
      runs-on: ubuntu-latest
      name: push_to_mirror
      steps:
          - name: push_to_mirror
            uses: actions/checkout@v4
            with:
              fetch-depth: 0
          - uses: pixta-dev/repository-mirroring-action@v1
            with:
              target_repo_url:
                  ${{ vars.MIRROR_URL }}
              ssh_private_key:
                  ${{ secrets.GIT_SSH_PRIVATE_KEY }}