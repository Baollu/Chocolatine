name: chocolatine

on:
    push:
        branches-ignore:
        - "ga-ignore-*"
    pull_request:
        branches-ignore:
        - "ga-ignore-*"

env:
    MIRROR_URL: git@github.com:EpitechPromo2028/B-DOP-200-PAR-2-1-chocolatine-boris.cheng.git
    EXECUTABLES: "binary_choco"

jobs:
    check_coding_style:
        runs-on: ubuntu-latest
        container: ghcr.io/epitech/coding-style-checker:latest
        steps:
            - uses: actions/checkout@v4
            - id: check_coding_style
              run: |
                check.sh $(pwd) $(pwd)
                input="coding-style-reports.log"
                while IFS=":" read -r name line error_type error_code
                    do 
                        echo "::error title=$error_type coding style error,file=$name,line=$line::$error_code"
                    done < "$input"

    check_program_compilation:
        needs: check_coding_style
        runs-on: ubuntu-latest
        timeout-minutes: 2
        container:
            image: epitechcontent/epitest-docker:latest
        steps:
            - uses: actions/checkout@v4
            - run: make
            - run: make clean
            - run: |
                  for file in ${{ env.EXECUTABLES }}; do  
                    if [ ! -f "$file" ]; then
                        echo "$file does not exist"
                        exit 1
                    fi
                    if [ ! -x "$file" ]; then
                        echo "$file is not executable"
                        exit 1
                    fi
                  done
            
    run_tests:
        needs: check_program_compilation
        runs-on: ubuntu-latest
        timeout-minutes: 2
        container:
            image: epitechcontent/epitest-docker:latest
        steps:
             - uses: actions/checkout@v4
             - id: run_tests
               run: make tests_run
    
    push_to_mirror:
        needs: check_program_compilation
        if: ${{ github.event_name == 'push' }}
        runs-on: ubuntu-latest
        timeout-minutes: 2
        steps:
            - uses: actions/checkout@v4
              with:
                fetch-depth: 0
            - uses: pixta-dev/repository-mirroring-action@v1
              with:
                target_repo_url:
                    ${{ env.MIRROR_URL }}
                ssh_private_key:
                    ${{ secrets.CHOCOLATINE_SSH_KEY_PRIVATE }}